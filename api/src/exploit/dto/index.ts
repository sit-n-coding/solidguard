import { ApiProperty, ApiResponseProperty } from '@nestjs/swagger';
import { Exclude, Type } from 'class-transformer';
import {
  IsString,
  IsOptional,
  IsEthereumAddress,
  IsArray,
  Matches,
  IsUUID,
  ArrayMinSize,
} from 'class-validator';
import { exampleExploit } from '../../source/example-exploit';

export class CreateExploitDto {
  name: string;
  authorUserId: string;
  description: string;
  targetAddr: string;
  targetNames: string[];
}

export class SearchExploitsQueryDto {
  @IsString()
  @Matches(/[a-zA-Z0-9 ]+/)
  @IsOptional()
  @ApiProperty({ example: 'TimelockController vul', required: false })
  name?: string;
}

export class CreateExploitRequestDto {
  @IsString()
  @Matches(/^[a-zA-Z0-9 ]+$/)
  @ApiProperty({ example: exampleExploit.name })
  name: string;
  @IsString()
  @ApiProperty({ example: exampleExploit.description })
  description: string; // Must be escaped! See ExploitController.
  @IsArray()
  @ApiProperty({ example: exampleExploit.targetNames })
  @ArrayMinSize(1)
  @Matches(/^[a-zA-Z0-9 ]+$/, { each: true })
  targetNames: string[];
  @IsEthereumAddress()
  @ApiProperty({ example: exampleExploit.targetAddr })
  targetAddr: string;
}

export class ExploitIdParamDto {
  @IsUUID()
  id: string;
}

export class CreateExploitResponseDto {
  @ApiResponseProperty({ example: '' })
  id: string;
  @ApiResponseProperty({ example: exampleExploit.name })
  name: string;
  @ApiResponseProperty({ example: exampleExploit.authorUserId })
  authorUserId: string;
  @ApiResponseProperty({ example: exampleExploit.description })
  description: string;
  @ApiResponseProperty({ example: exampleExploit.targetAddr })
  targetAddr: string;
  @ApiProperty({ example: exampleExploit.targetNames })
  targetNames: string[];
  @ApiResponseProperty({ example: exampleExploit.verified })
  verified: boolean;
}

export class ExploitResponseDto {
  @ApiResponseProperty({ example: '' })
  id: string;
  @ApiResponseProperty({ example: exampleExploit.name })
  name: string;
  @ApiResponseProperty({ example: exampleExploit.authorName })
  authorName: string;
  @Exclude()
  authorUserId?: string;
  @ApiResponseProperty({ example: exampleExploit.description })
  description: string;
  @ApiResponseProperty({ example: exampleExploit.targetAddr })
  targetAddr: string;
  @IsArray()
  @ApiProperty({ example: exampleExploit.targetNames })
  targetNames: string[];
  @ApiResponseProperty({ example: exampleExploit.verified })
  verified: boolean;
}

export class ExploitNotifyJobDto {
  exploitId: string;
}

export class SearchExploitsDto {
  pageNo: number;
  name: string;
}

export class SearchExploitsResponseDto {
  @ApiProperty({ example: [{ id: '', ...exampleExploit }] })
  @Type(() => ExploitResponseDto)
  data: ExploitResponseDto[];
}
